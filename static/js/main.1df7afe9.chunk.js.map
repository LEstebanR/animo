{"version":3,"sources":["messages.js","components/message.jsx","App.js","reportWebVitals.js","index.js"],"names":["messagges","Message","useState","index","setIndex","className","onClick","parseInt","Math","random","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAmBeA,G,MAnBC,CACd,gBACA,iCACA,+BACA,wCACA,mBACA,sCACA,qDACA,uDACA,YACA,qCACA,qBACA,kBACA,qBACA,kBACA,yBACA,oB,OCEaC,EAdG,WAAQ,IAAD,EACGC,mBAAS,GADZ,mBAChBC,EADgB,KACTC,EADS,KAOvB,OACA,qBAAIC,UAAU,oBAAoBC,QALZ,WACpBF,EAASG,SAASC,KAAKC,SAAST,EAAUU,UAI5C,UAA2DV,EAAUG,GAArE,Q,MCDaQ,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1df7afe9.chunk.js","sourcesContent":["let messagges = [\n  \"¡Ánimo!\",\n  \"¡Hacé que valga la pena!\",\n  \"¡Merecés mucho más!\", \n  'Sos más grande de lo que pensás', \n  'Mantenelo simple', \n  'No hay bug que no tenga solución',\n  'No sos diferente a las personas que lo han logrado',\n  'Vivís una gran época, todo está en Internet',\n  '¡Dale!',\n  'Una línea de código a la vez',\n  'Primero lo primero',\n  'Elije el riesgo',\n  'Elije ser valiente',\n  'Elíjete a ti',\n  'Siempre apuesta por ti',\n  'Sé tu fan #1'\n];\n\nexport default messagges;\n","import { useState } from \"react\";\nimport \"../styles/message.css\";\nimport messagges from \"../messages\";\n\nconst  Message =  () =>  {\n  const [index, setIndex] = useState(0);\n\n  const changeMessage = () => {\n    setIndex(parseInt(Math.random()*messagges.length))\n  }\n  \n  return( \n  <h1 className=\"message-container\" onClick={changeMessage}>{messagges[index]} </h1>\n\n  )\n}\n\n\nexport default Message;\n","import Message from './components/message';\nimport './App.css';\n\nfunction App() {\n  return(\n    <>\n      <Message/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}